version: 2.1

default:
  environment: &envvars
    CONTAINER_NAME: quay.io/redsift/sandbox-javascript
    CIRCLE_REVERSE_DEPENDENCIES: sandbox-dmarc-insights
executors:
  dockexec:
    shell: /bin/bash
    environment: *envvars
    docker:
      - image: cibuilds/docker:19.03.2

  testexec:
    shell: /bin/bash
    docker:
      - image: quay.io/redsift/buildos-node-ubuntu
        auth:
          username: $QUAY_USER
          password: $QUAY_PASS

  baseexec:
    shell: /bin/bash
    environment: *envvars
    docker:
      - image: cibuilds/base:2019.03

commands:
  v_build:
    parameters:
      nv:
        type: string
        default: "8.10.0"
      islatest:
        type: boolean
        default: false
    steps:
      - checkout
      - setup_remote_docker
      - run: docker login -u $QUAY_USER -p $QUAY_PASS quay.io
      - run: ./circle/docker_build << parameters.nv >> << parameters.islatest >>
      - run: ./circle/gen_testing_dockerfile << parameters.nv >>
      - run: ./circle/docker_test << parameters.nv >>
      - persist_to_workspace:
          root: ./
          paths:
            - circle
      - deploy:
          command: docker push $CONTAINER_NAME

jobs:
  run_v8_test:
    executor: testexec
    steps:
      - checkout
      - run: |
          echo "Running node-capnp install"
          git clone https://github.com/capnproto/node-capnp.git
          cd node-capnp
          npm install
      - run: |
          echo "Running npm install"
          npm install
      - run: |
          echo "Running test"
          mkdir -p ./test-results
          npm run test-ci
      - store_test_results:
          path: ./test-results

  build_v8:
    executor: dockexec
    steps:
      - v_build

  run_v10_test:
    executor: testexec
    steps:
      - checkout
      - run: |
          echo "Running node-capnp install"
          git clone https://github.com/capnproto/node-capnp.git
          cd node-capnp
          npm install
      - run: |
          echo "Running npm install"
          npm install
      - run: |
          echo "Running test"
          mkdir -p ./test-results
          npm run test-ci
      - store_test_results:
          path: ./test-results

  build_v10:
    executor: dockexec
    steps:
      - checkout
      - v_build:
          nv: "10.17.0"
          islatest: true

  build_placeholder:
    executor: dockexec
    steps:
      - run: echo "Create a job for each extra version with the command defined above"

  trigger-builds:
    executor: baseexec
    steps:
      - attach_workspace:
          at: /
      - run: /circle/trigger_build

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - run_v8_test
      - run_v10_test
      - build_v8:
          requires:
            - run_v8_test 
          context: org-global
      - build_v10:
          requires:
            - run_v10_test 
          context: org-global
      - trigger-builds:
          requires:
            - build_v8
            - build_v10
          filters:
            branches:
              only:
                - master
