machine:
  environment:
    CONTAINER_NAME: quay.io/redsift/sandbox-nodejs
    NODEJS_VERSIONS: 0.12 4.x 5.x 
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.0-circleci'
    - sudo chmod 0755 /usr/bin/docker  
  services:
    - docker

dependencies:
  override:
    - docker info
    - |
      set -e
      for NV in $NODEJS_VERSIONS
      do
        ESV=es6
        if [ "$NV" = "0.12" ]; then
          ESV=es5
        fi
        docker build --build-arg setup=setup_$NV --build-arg esv=$ESV -t $NV .
      done
      
test:
  override:
    - |
      set -e
      for NV in $NODEJS_VERSIONS
      do
        INIT=$(docker inspect -f "{{index .ContainerConfig.Labels \"io.redsift.dagger.init\" }}" $NV)
        echo "Calling init = $INIT"
        docker run -v $PWD/test:/run/dagger/sift $NV $INIT 0 2 3
        ls -A $PWD/test/server/node_modules $PWD/test/server-alt/node_modules
        RUN=$(docker inspect -f "{{index .ContainerConfig.Labels \"io.redsift.dagger.run\" }}" $NV)
        echo "Calling run = $RUN"
        docker run -v $PWD/test:/run/dagger/sift -e DRY=true $NV $RUN 0 2 3
        sudo rm -Rf $PWD/test/server/node_modules $PWD/test/server-alt/node_modules
      done
  
deployment:
  production:
    branch: master  
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - | 
        set -e
        for NV in $NODEJS_VERSIONS
        do
          VERSION=$(docker run $NV --version)
          echo "Tagging as $CONTAINER_NAME:$VERSION"
          docker tag $NV:latest $CONTAINER_NAME:$VERSION
          docker push $CONTAINER_NAME 
        done      
