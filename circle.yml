machine:
  environment:
    CONTAINER_NAME: quay.io/redsift/sandbox-javascript
    NODEJS_VERSIONS: 0.12.13 4.4.2 5.10.0 0.12 4.x 5.x
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.0-circleci'
    - sudo chmod 0755 /usr/bin/docker
  services:
    - docker

dependencies:
  override:
    - docker info
    - |
      set -e
      for NV in $NODEJS_VERSIONS
      do
        ESV=es6
        case "$NV" in
          0.12*)
          ESV=es5
          ;;
        esac
        docker build --build-arg nodev=$NV --build-arg esv=$ESV -t $NV .
      done

test:
  override:
    - |
      set -e
      sudo groupadd -g 7438 sandbox
      sudo adduser --system --no-create-home --shell /bin/false -u 7438 -gid 7438 sandbox
      sudo chown -R sandbox:sandbox ${PWD}
      for NV in $NODEJS_VERSIONS
      do
        INIT=$(docker inspect -f "{{index .Config.Labels \"io.redsift.sandbox.install\" }}" $NV)
        echo "Calling init = $INIT"
        docker run -u 7438:7438 -v $PWD/test:/run/sandbox/sift $NV $INIT 0 2 3
        ls -A $PWD/test/server/node_modules $PWD/test/server-alt/node_modules
        RUN=$(docker inspect -f "{{index .Config.Labels \"io.redsift.sandbox.run\" }}" $NV)
        echo "Calling run = $RUN"
        docker run -u 7438:7438 -v $PWD/test:/run/sandbox/sift -e DRY=true $NV $RUN 0 2 3
        sudo rm -Rf $PWD/test/server/node_modules $PWD/test/server-alt/node_modules
      done

deployment:
  production:
    branch: master
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - |
        set -e
        latest=""
        for NV in $NODEJS_VERSIONS
        do
          VERSION=$(docker run -u 7438:7438 $NV --version)
          MAJOR_VERSION=(${VERSION//./ })
          echo "Tagging as $CONTAINER_NAME:$VERSION"
          docker tag -f $NV:latest $CONTAINER_NAME:$VERSION
          echo "Tagging as $CONTAINER_NAME:$MAJOR_VERSION"
          docker tag -f $NV:latest $CONTAINER_NAME:$MAJOR_VERSION
          latest=$NV:latest
        done
        echo "Tagging $latest as $CONTAINER_NAME:latest"
        docker tag $latest $CONTAINER_NAME:latest
        docker push $CONTAINER_NAME
